//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockAnalyzerApp.StockWebServices
{


   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ServiceModel.ServiceContractAttribute(Namespace = "http://www.ultimatechartist.com/", ConfigurationName = "StockWebServices.LicenseManagerSoap")]
   public interface LicenseManagerSoap
   {

      // CODEGEN: Generating message contract since element name userID from namespace http://www.ultimatechartist.com/ is not marked nillable
      [System.ServiceModel.OperationContractAttribute(Action = "http://www.ultimatechartist.com/GetLicense", ReplyAction = "*")]
      GetLicenseResponse GetLicense(GetLicenseRequest request);

      // CODEGEN: Generating message contract since element name userID from namespace http://www.ultimatechartist.com/ is not marked nillable
      [System.ServiceModel.OperationContractAttribute(Action = "http://www.ultimatechartist.com/IsRegisteredUser", ReplyAction = "*")]
      IsRegisteredUserResponse IsRegisteredUser(IsRegisteredUserRequest request);
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
   public partial class GetLicenseRequest
   {

      [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetLicense", Namespace = "http://www.ultimatechartist.com/", Order = 0)]
      public GetLicenseRequestBody Body;

      public GetLicenseRequest()
      {
      }

      public GetLicenseRequest(GetLicenseRequestBody Body)
      {
         this.Body = Body;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.ultimatechartist.com/")]
   public partial class GetLicenseRequestBody
   {

      [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
      public string userID;

      [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 1)]
      public byte[] encryptedUserPassword;

      [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 2)]
      public string machineID;

      public GetLicenseRequestBody()
      {
      }

      public GetLicenseRequestBody(string userID, byte[] encryptedUserPassword, string machineID)
      {
         this.userID = userID;
         this.encryptedUserPassword = encryptedUserPassword;
         this.machineID = machineID;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
   public partial class GetLicenseResponse
   {

      [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetLicenseResponse", Namespace = "http://www.ultimatechartist.com/", Order = 0)]
      public GetLicenseResponseBody Body;

      public GetLicenseResponse()
      {
      }

      public GetLicenseResponse(GetLicenseResponseBody Body)
      {
         this.Body = Body;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.ultimatechartist.com/")]
   public partial class GetLicenseResponseBody
   {

      [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
      public string GetLicenseResult;

      public GetLicenseResponseBody()
      {
      }

      public GetLicenseResponseBody(string GetLicenseResult)
      {
         this.GetLicenseResult = GetLicenseResult;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
   public partial class IsRegisteredUserRequest
   {

      [System.ServiceModel.MessageBodyMemberAttribute(Name = "IsRegisteredUser", Namespace = "http://www.ultimatechartist.com/", Order = 0)]
      public IsRegisteredUserRequestBody Body;

      public IsRegisteredUserRequest()
      {
      }

      public IsRegisteredUserRequest(IsRegisteredUserRequestBody Body)
      {
         this.Body = Body;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.ultimatechartist.com/")]
   public partial class IsRegisteredUserRequestBody
   {

      [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
      public string userID;

      [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 1)]
      public byte[] encryptedUserPassword;

      public IsRegisteredUserRequestBody()
      {
      }

      public IsRegisteredUserRequestBody(string userID, byte[] encryptedUserPassword)
      {
         this.userID = userID;
         this.encryptedUserPassword = encryptedUserPassword;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
   public partial class IsRegisteredUserResponse
   {

      [System.ServiceModel.MessageBodyMemberAttribute(Name = "IsRegisteredUserResponse", Namespace = "http://www.ultimatechartist.com/", Order = 0)]
      public IsRegisteredUserResponseBody Body;

      public IsRegisteredUserResponse()
      {
      }

      public IsRegisteredUserResponse(IsRegisteredUserResponseBody Body)
      {
         this.Body = Body;
      }
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
   [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.ultimatechartist.com/")]
   public partial class IsRegisteredUserResponseBody
   {

      [System.Runtime.Serialization.DataMemberAttribute(Order = 0)]
      public bool IsRegisteredUserResult;

      public IsRegisteredUserResponseBody()
      {
      }

      public IsRegisteredUserResponseBody(bool IsRegisteredUserResult)
      {
         this.IsRegisteredUserResult = IsRegisteredUserResult;
      }
   }

   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   public interface LicenseManagerSoapChannel : LicenseManagerSoap, System.ServiceModel.IClientChannel
   {
   }

   [System.Diagnostics.DebuggerStepThroughAttribute()]
   [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
   public partial class LicenseManagerSoapClient : System.ServiceModel.ClientBase<LicenseManagerSoap>, LicenseManagerSoap
   {

      public LicenseManagerSoapClient()
      {
      }

      public LicenseManagerSoapClient(string endpointConfigurationName) :
         base(endpointConfigurationName)
      {
      }

      public LicenseManagerSoapClient(string endpointConfigurationName, string remoteAddress) :
         base(endpointConfigurationName, remoteAddress)
      {
      }

      public LicenseManagerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
         base(endpointConfigurationName, remoteAddress)
      {
      }

      public LicenseManagerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
         base(binding, remoteAddress)
      {
      }

      [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
      GetLicenseResponse LicenseManagerSoap.GetLicense(GetLicenseRequest request)
      {
         return base.Channel.GetLicense(request);
      }

      public string GetLicense(string userID, byte[] encryptedUserPassword, string machineID)
      {
         GetLicenseRequest inValue = new GetLicenseRequest();
         inValue.Body = new GetLicenseRequestBody();
         inValue.Body.userID = userID;
         inValue.Body.encryptedUserPassword = encryptedUserPassword;
         inValue.Body.machineID = machineID;
         GetLicenseResponse retVal = ((LicenseManagerSoap)(this)).GetLicense(inValue);
         return retVal.Body.GetLicenseResult;
      }

      [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
      IsRegisteredUserResponse LicenseManagerSoap.IsRegisteredUser(IsRegisteredUserRequest request)
      {
         return base.Channel.IsRegisteredUser(request);
      }

      public bool IsRegisteredUser(string userID, byte[] encryptedUserPassword)
      {
         IsRegisteredUserRequest inValue = new IsRegisteredUserRequest();
         inValue.Body = new IsRegisteredUserRequestBody();
         inValue.Body.userID = userID;
         inValue.Body.encryptedUserPassword = encryptedUserPassword;
         IsRegisteredUserResponse retVal = ((LicenseManagerSoap)(this)).IsRegisteredUser(inValue);
         return retVal.Body.IsRegisteredUserResult;
      }
   }
}
